{"ast":null,"code":"import{applyMiddleware,combineReducers,createStore}from'redux';import{composeWithDevTools}from'redux-devtools-extension';import thunk from'redux-thunk';import weatherReducer from'./reducers/weatherReducers';import alertReducer from'./reducers/alertReducer';var rootReducer=combineReducers({weather:weatherReducer,alert:alertReducer});var store=createStore(rootReducer,composeWithDevTools(applyMiddleware(thunk)));export default store;","map":{"version":3,"names":["applyMiddleware","combineReducers","createStore","composeWithDevTools","thunk","weatherReducer","alertReducer","rootReducer","weather","alert","store"],"sources":["E:/weather-app-typescript-react--main/weather-app-typescript-react--main/src/store/index.ts"],"sourcesContent":["import { applyMiddleware, combineReducers, createStore } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport thunk from 'redux-thunk';\n\nimport weatherReducer from './reducers/weatherReducers';\nimport alertReducer from './reducers/alertReducer';\n\nconst rootReducer = combineReducers({\n    weather: weatherReducer,\n    alert: alertReducer\n});\n\nconst store = createStore(\n    rootReducer,\n    composeWithDevTools(applyMiddleware(thunk))\n);\n\nexport type RootState = ReturnType<typeof rootReducer>;\n\nexport default store;"],"mappings":"AAAA,OAASA,eAAT,CAA0BC,eAA1B,CAA2CC,WAA3C,KAA8D,OAA9D,CACA,OAASC,mBAAT,KAAoC,0BAApC,CACA,MAAOC,CAAAA,KAAP,KAAkB,aAAlB,CAEA,MAAOC,CAAAA,cAAP,KAA2B,4BAA3B,CACA,MAAOC,CAAAA,YAAP,KAAyB,yBAAzB,CAEA,GAAMC,CAAAA,WAAW,CAAGN,eAAe,CAAC,CAChCO,OAAO,CAAEH,cADuB,CAEhCI,KAAK,CAAEH,YAFyB,CAAD,CAAnC,CAKA,GAAMI,CAAAA,KAAK,CAAGR,WAAW,CACrBK,WADqB,CAErBJ,mBAAmB,CAACH,eAAe,CAACI,KAAD,CAAhB,CAFE,CAAzB,CAOA,cAAeM,CAAAA,KAAf"},"metadata":{},"sourceType":"module"}