{"ast":null,"code":"import _regeneratorRuntime from\"E:\\\\weather-app-typescript-react--main\\\\weather-app-typescript-react--main\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";import _asyncToGenerator from\"E:\\\\weather-app-typescript-react--main\\\\weather-app-typescript-react--main\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";import{GET_WEATHER,SET_LOADING,SET_ERROR}from'../types';export var getWeather=function getWeather(city){return/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(dispatch){var res,_resData,resData;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.prev=0;_context.next=3;return fetch(\"https://api.openweathermap.org/data/2.5/weather?q=\".concat(city,\"&appid=\").concat(process.env.REACT_APP_API_KEY));case 3:res=_context.sent;if(res.ok){_context.next=9;break;}_context.next=7;return res.json();case 7:_resData=_context.sent;throw new Error(_resData.message);case 9:_context.next=11;return res.json();case 11:resData=_context.sent;dispatch({type:GET_WEATHER,payload:resData});_context.next=18;break;case 15:_context.prev=15;_context.t0=_context[\"catch\"](0);dispatch({type:SET_ERROR,payload:_context.t0.message});case 18:case\"end\":return _context.stop();}}},_callee,null,[[0,15]]);}));return function(_x){return _ref.apply(this,arguments);};}();};export var setLoading=function setLoading(){return{type:SET_LOADING};};export var setError=function setError(){return{type:SET_ERROR,payload:''};};","map":{"version":3,"names":["GET_WEATHER","SET_LOADING","SET_ERROR","getWeather","city","dispatch","fetch","process","env","REACT_APP_API_KEY","res","ok","json","resData","Error","message","type","payload","setLoading","setError"],"sources":["E:/weather-app-typescript-react--main/weather-app-typescript-react--main/src/store/actions/weatherAction.ts"],"sourcesContent":["import { ThunkAction } from 'redux-thunk';\nimport { RootState } from '..';\nimport { WeatherAction, WeatherData, WeatherError, GET_WEATHER, SET_LOADING, SET_ERROR } from '../types'\n\nexport const getWeather = (city: string): ThunkAction<void, RootState, null, WeatherAction> => {\n    return async dispatch => {\n        try {\n            const res = await fetch(`https://api.openweathermap.org/data/2.5/weather?q=${city}&appid=${process.env.REACT_APP_API_KEY}`);\n\n            if(!res.ok) {\n                const resData: WeatherError = await res.json();\n                throw new Error(resData.message);\n            }\n\n            const resData: WeatherData = await res.json();\n            dispatch({\n                type: GET_WEATHER,\n                payload: resData\n            });\n        } catch(err) {\n            dispatch({\n                type: SET_ERROR,\n                payload: err.message\n            })\n        }\n    }\n}\n\nexport const setLoading = (): WeatherAction => {\n    return {\n        type: SET_LOADING\n    }\n}\n\nexport const setError = (): WeatherAction => {\n    return {\n        type: SET_ERROR,\n        payload: ''\n    }\n}"],"mappings":"yYAEA,OAAmDA,WAAnD,CAAgEC,WAAhE,CAA6EC,SAA7E,KAA8F,UAA9F,CAEA,MAAO,IAAMC,CAAAA,UAAU,CAAG,QAAbA,CAAAA,UAAa,CAACC,IAAD,CAAqE,CAC3F,+FAAO,iBAAMC,QAAN,iLAEmBC,CAAAA,KAAK,6DAAsDF,IAAtD,mBAAoEG,OAAO,CAACC,GAAR,CAAYC,iBAAhF,EAFxB,QAEOC,GAFP,kBAIKA,GAAG,CAACC,EAJT,+CAKyCD,CAAAA,GAAG,CAACE,IAAJ,EALzC,QAKWC,QALX,oBAMW,IAAIC,CAAAA,KAAJ,CAAUD,QAAO,CAACE,OAAlB,CANX,+BASoCL,CAAAA,GAAG,CAACE,IAAJ,EATpC,SASOC,OATP,eAUCR,QAAQ,CAAC,CACLW,IAAI,CAAEhB,WADD,CAELiB,OAAO,CAAEJ,OAFJ,CAAD,CAAR,CAVD,iFAeCR,QAAQ,CAAC,CACLW,IAAI,CAAEd,SADD,CAELe,OAAO,CAAE,YAAIF,OAFR,CAAD,CAAR,CAfD,qEAAP,+DAqBH,CAtBM,CAwBP,MAAO,IAAMG,CAAAA,UAAU,CAAG,QAAbA,CAAAA,UAAa,EAAqB,CAC3C,MAAO,CACHF,IAAI,CAAEf,WADH,CAAP,CAGH,CAJM,CAMP,MAAO,IAAMkB,CAAAA,QAAQ,CAAG,QAAXA,CAAAA,QAAW,EAAqB,CACzC,MAAO,CACHH,IAAI,CAAEd,SADH,CAEHe,OAAO,CAAE,EAFN,CAAP,CAIH,CALM"},"metadata":{},"sourceType":"module"}