{"ast":null,"code":"import { applyMiddleware, combineReducers, createStore } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport thunk from 'redux-thunk';\nimport weatherReducer from './reducers/weatherReducers';\nimport alertReducer from './reducers/alertReducer';\nconst rootReducer = combineReducers({\n  weather: weatherReducer,\n  alert: alertReducer\n});\nconst store = createStore(rootReducer, composeWithDevTools(applyMiddleware(thunk)));\nexport default store;","map":{"version":3,"names":["applyMiddleware","combineReducers","createStore","composeWithDevTools","thunk","weatherReducer","alertReducer","rootReducer","weather","alert","store"],"sources":["E:/weather-app-typescript-react--main/weather/src/store/index.ts"],"sourcesContent":["import { applyMiddleware, combineReducers, createStore } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport thunk from 'redux-thunk';\n\nimport weatherReducer from './reducers/weatherReducers';\nimport alertReducer from './reducers/alertReducer';\n\nconst rootReducer = combineReducers({\n    weather: weatherReducer,\n    alert: alertReducer\n});\n\nconst store = createStore(\n    rootReducer,\n    composeWithDevTools(applyMiddleware(thunk))\n);\n\nexport type RootState = ReturnType<typeof rootReducer>;\n\nexport default store;"],"mappings":"AAAA,SAASA,eAAT,EAA0BC,eAA1B,EAA2CC,WAA3C,QAA8D,OAA9D;AACA,SAASC,mBAAT,QAAoC,0BAApC;AACA,OAAOC,KAAP,MAAkB,aAAlB;AAEA,OAAOC,cAAP,MAA2B,4BAA3B;AACA,OAAOC,YAAP,MAAyB,yBAAzB;AAEA,MAAMC,WAAW,GAAGN,eAAe,CAAC;EAChCO,OAAO,EAAEH,cADuB;EAEhCI,KAAK,EAAEH;AAFyB,CAAD,CAAnC;AAKA,MAAMI,KAAK,GAAGR,WAAW,CACrBK,WADqB,EAErBJ,mBAAmB,CAACH,eAAe,CAACI,KAAD,CAAhB,CAFE,CAAzB;AAOA,eAAeM,KAAf"},"metadata":{},"sourceType":"module"}