{"ast":null,"code":"import { GET_WEATHER, SET_LOADING, SET_ERROR } from '../types';\nexport const getWeather = city => {\n  return async dispatch => {\n    try {\n      const res = await fetch(`https://api.openweathermap.org/data/2.5/weather?q=${city}&appid=${process.env.REACT_APP_API_KEY}`);\n\n      if (!res.ok) {\n        const resData = await res.json();\n        throw new Error(resData.message);\n      }\n\n      const resData = await res.json();\n      dispatch({\n        type: GET_WEATHER,\n        payload: resData\n      });\n    } catch (err) {\n      dispatch({\n        type: SET_ERROR,\n        payload: err.message\n      });\n    }\n  };\n};\nexport const setLoading = () => {\n  return {\n    type: SET_LOADING\n  };\n};\nexport const setError = () => {\n  return {\n    type: SET_ERROR,\n    payload: ''\n  };\n};","map":{"version":3,"names":["GET_WEATHER","SET_LOADING","SET_ERROR","getWeather","city","dispatch","res","fetch","process","env","REACT_APP_API_KEY","ok","resData","json","Error","message","type","payload","err","setLoading","setError"],"sources":["E:/weather-app-typescript-react--main/weather-app-typescript-react--main/src/store/actions/weatherAction.ts"],"sourcesContent":["import { ThunkAction } from 'redux-thunk';\nimport { RootState } from '..';\nimport { WeatherAction, WeatherData, WeatherError, GET_WEATHER, SET_LOADING, SET_ERROR } from '../types'\n\nexport const getWeather = (city: string): ThunkAction<void, RootState, null, WeatherAction> => {\n    return async dispatch => {\n        try {\n            const res = await fetch(`https://api.openweathermap.org/data/2.5/weather?q=${city}&appid=${process.env.REACT_APP_API_KEY}`);\n\n            if(!res.ok) {\n                const resData: WeatherError = await res.json();\n                throw new Error(resData.message);\n            }\n\n            const resData: WeatherData = await res.json();\n            dispatch({\n                type: GET_WEATHER,\n                payload: resData\n            });\n        } catch(err) {\n            dispatch({\n                type: SET_ERROR,\n                payload: err.message\n            })\n        }\n    }\n}\n\nexport const setLoading = (): WeatherAction => {\n    return {\n        type: SET_LOADING\n    }\n}\n\nexport const setError = (): WeatherAction => {\n    return {\n        type: SET_ERROR,\n        payload: ''\n    }\n}"],"mappings":"AAEA,SAAmDA,WAAnD,EAAgEC,WAAhE,EAA6EC,SAA7E,QAA8F,UAA9F;AAEA,OAAO,MAAMC,UAAU,GAAIC,IAAD,IAAqE;EAC3F,OAAO,MAAMC,QAAN,IAAkB;IACrB,IAAI;MACA,MAAMC,GAAG,GAAG,MAAMC,KAAK,CAAE,qDAAoDH,IAAK,UAASI,OAAO,CAACC,GAAR,CAAYC,iBAAkB,EAAlG,CAAvB;;MAEA,IAAG,CAACJ,GAAG,CAACK,EAAR,EAAY;QACR,MAAMC,OAAqB,GAAG,MAAMN,GAAG,CAACO,IAAJ,EAApC;QACA,MAAM,IAAIC,KAAJ,CAAUF,OAAO,CAACG,OAAlB,CAAN;MACH;;MAED,MAAMH,OAAoB,GAAG,MAAMN,GAAG,CAACO,IAAJ,EAAnC;MACAR,QAAQ,CAAC;QACLW,IAAI,EAAEhB,WADD;QAELiB,OAAO,EAAEL;MAFJ,CAAD,CAAR;IAIH,CAbD,CAaE,OAAMM,GAAN,EAAW;MACTb,QAAQ,CAAC;QACLW,IAAI,EAAEd,SADD;QAELe,OAAO,EAAEC,GAAG,CAACH;MAFR,CAAD,CAAR;IAIH;EACJ,CApBD;AAqBH,CAtBM;AAwBP,OAAO,MAAMI,UAAU,GAAG,MAAqB;EAC3C,OAAO;IACHH,IAAI,EAAEf;EADH,CAAP;AAGH,CAJM;AAMP,OAAO,MAAMmB,QAAQ,GAAG,MAAqB;EACzC,OAAO;IACHJ,IAAI,EAAEd,SADH;IAEHe,OAAO,EAAE;EAFN,CAAP;AAIH,CALM"},"metadata":{},"sourceType":"module"}